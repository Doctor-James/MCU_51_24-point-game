C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\keyboard.obj
COMPILER INVOKED BY: D:\keil_v5\C51\BIN\C51.EXE USER\keyboard.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\keyboard.lst) TABS(2) OBJECT(.\Objects\keyboard.obj)

line level    source

   1          #include "main.h"
   2          unsigned char keybuf[5][4] = {
   3              {0,0,0,0},{0,0,0,0},
   4              {0,0,0,0},{0,0,0,0},{0,0,0,0}};
   5          
   6          char cal_str[32];
   7          unsigned char number_rand[4];  //Ëæ»úÉú³ÉµÄËÄ¸öÊý
   8          unsigned int number_rand_state[4] = {0,0,0,0};  //±¸·Ý
   9          unsigned int number_rand_temp[4];  //Ëæ»úÉú³ÉµÄËÄ¸öÊý
  10          unsigned char dip_number_temp;
  11          unsigned int number_rand_temptemp;
  12          unsigned char keybuf_temp[5][4] = {
  13              {0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},
  14              {0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
  15          static unsigned char keybuf_backup[5][4] = {
  16              {0,0,0,0},{0,0,0,0},
  17              {0,0,0,0},{0,0,0,0},{0,0,0,0}};
  18          static unsigned char dip_number;
  19          static unsigned char dip_number_col;
  20          static unsigned char cal_number;
  21          int result;         //¼ÆËãËùµÃµÄ½á¹û
  22          unsigned int rand_seed; //Ëæ»úÊýÖÖ×Ó
  23              
  24              
  25          void Keyscan(unsigned char scannum)//¶ÁÈ¡¼üÅÌÉ¨ÃèÖµ£¬¼´ÁÐÐÅºÅ£¬ÔÙÅÐ¶ÏÐÐ
  26          {
  27   1        unsigned char i;
  28   1      
  29   1        keybuf_temp[scannum][0] = (keybuf_temp[scannum][0]<<1)|((~P4)&0x01);            //Èí¼þÏû¶¶£¬°´Î»»ò£¬Ã¿É¨ÃèÒ»´Î½
             -«¼üÖµ×îµÍÎ»ÖÃ1²¢×óÒÆÒ»Î»
  30   1        keybuf_temp[scannum][1] = (keybuf_temp[scannum][1]<<1)|(((~P4)&0x02)>>1);
  31   1        keybuf_temp[scannum][2] = (keybuf_temp[scannum][2]<<1)|(((~P4)&0x04)>>2);
  32   1        keybuf_temp[scannum][3] = (keybuf_temp[scannum][3]<<1)|(((~P4)&0x08)>>3);
  33   1          
  34   1        for(i = 0;i < 4;i++)
  35   1        {
  36   2          if((keybuf_temp[scannum][i] & 0x1F) == 0x00) keybuf[scannum][i] = 0;          //¼ì²âµ½Îå´Î°´ÏÂ/ËÉ¿ª£¬½«¼üÖµ±ê
             -Ö¾Î»ÖÃ1/0
  37   2          if((keybuf_temp[scannum][i] & 0x1F) == 0x1F) keybuf[scannum][i] = 1;
  38   2        }
  39   1        
  40   1      }
  41          
  42          void KeyboardDriver()     //¼üÅÌÇý¶¯³ÌÐò
  43          {
  44   1        unsigned char i,j,k;
  45   1        for(i = 0;i<5;i++)
  46   1        {
  47   2          for(j = 0;j<4;j++)
  48   2          {
  49   3            if(keybuf[i][j] != keybuf_backup[i][j])   //¼ì²âµ½Ìø±äÖ´ÐÐ¼üÅÌÏàÓ¦¹¦ÄÜ
  50   3            {
  51   4              if(keybuf[i][j] == 1)
  52   4              {
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 2   

  53   5                KeyboardMap(i,j);
  54   5              }
  55   4              keybuf_backup[i][j] = keybuf[i][j];
  56   4              k = 0;
  57   4            }                     
  58   3          }
  59   2        }
  60   1      }
  61          
  62          
  63          void KeyboardMap(unsigned char i,unsigned char j) //¼üÅÌ¹¦ÄÜÓ³Éä
  64          {
  65   1      
  66   1        if(dip_number>7&&dip_number_col ==0)
  67   1        {
  68   2          dip_number = 1;
  69   2          dip_number_col = 1;
  70   2        }
  71   1        else if(dip_number>7&&dip_number_col ==1)
  72   1        {
  73   2          dip_number = 1;
  74   2          dip_number_col = 2;
  75   2        }
  76   1          if(i ==0)
  77   1          {
  78   2            switch(j)
  79   2              {
  80   3                case 0:key_16(dip_number,dip_number_col);break;
  81   3                case 1:key_1(dip_number,dip_number_col); break;
  82   3                case 2:key_2(dip_number,dip_number_col); break;
  83   3                case 3:key_3(dip_number,dip_number_col); break;
  84   3                default:break;
  85   3              }
  86   2          }
  87   1          else if(i ==1)
  88   1          {
  89   2            switch(j)
  90   2              {
  91   3                case 0:key_4(dip_number,dip_number_col);break;
  92   3                case 1: break;
  93   3                case 2: break;
  94   3                case 3: break;
  95   3                default:break;
  96   3              }
  97   2          }
  98   1          else if(i ==2)
  99   1          {
 100   2            switch(j)
 101   2              {
 102   3                case 0:break;
 103   3                case 1: break;
 104   3                case 2: key_17(dip_number,dip_number_col); break;
 105   3                case 3: key_11();break;
 106   3                default:break;
 107   3              }
 108   2          }
 109   1          else if(i ==3)
 110   1          {
 111   2            switch(j)
 112   2              {
 113   3                case 0:dip_number = 1;dip_number_col = 0;cal_number = 0;P4|=0xF0;F1_start();break;
 114   3                case 1:dip_number = 1;dip_number_col = 0;cal_number = 0;P4|=0xF0;key_F2();break;
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 3   

 115   3                case 2:break;
 116   3                case 3:break;
 117   3                default:break;
 118   3              }
 119   2          }
 120   1          else if(i ==4)
 121   1          {
 122   2            switch(j)
 123   2              {
 124   3                case 0: key_12(dip_number,dip_number_col); break;
 125   3                case 1: key_13(dip_number,dip_number_col); break;
 126   3                case 2: key_14(dip_number,dip_number_col); break;
 127   3                case 3: key_15(dip_number,dip_number_col); break;
 128   3                default:break;
 129   3              }
 130   2          }
 131   1        
 132   1        
 133   1      }
 134          
 135          
 136          unsigned char toascll(unsigned char number)
 137          {
 138   1        return number+0x30;
 139   1      }
 140          
 141          void set_24()
 142          {
 143   1          unsigned char i;
 144   1          //Ê¹ÓÃforÑ­»·Éú³É4¸öËæ»úÊý
 145   1          for (i = 0; i < 4; i++) {
 146   2              srand(rand_seed);          
 147   2              number_rand_temp[i] = (unsigned int)rand_seed;
 148   2            number_rand_temptemp = rand();
 149   2              number_rand[i] = rand()%12+1;
 150   2              rand_seed+=number_rand[i];    //½«Ëæ»úÊýÖÖ×ÓºÍÃ¿´ÎÉú³ÉµÄËæ»úÊýÏà¼Ó×÷ÎªÐÂµÄËæ»úÊýÖÖ×Ó
 151   2          }
 152   1      }
 153          
 154          /*
 155          ** °´¼ü¹¦ÄÜ£¬¾ßÌå¹¦ÄÜ¼û±¨¸æÖÐµÄ¼üÅÌ¹¦ÄÜ±í
 156          */
 157          
 158          void F1_start()
 159          {
 160   1          unsigned char lcd[32] = {0};
 161   1          unsigned char i=0;
 162   1          set_24();
 163   1          clear();
 164   1        for(i=0;i<2;i++)
 165   1        {
 166   2          number_rand_state[i] = 0;
 167   2          LCD_Map(number_rand[i],lcd);
 168   2          dis_on_off(1);
 169   2          set_stratline(0);
 170   2          display_32_left(0,32*i,lcd);
 171   2        
 172   2        }
 173   1        
 174   1          for(i=2;i<4;i++)
 175   1        {
 176   2          number_rand_state[i] = 0;
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 4   

 177   2          LCD_Map(number_rand[i],lcd);
 178   2          dis_on_off(1);
 179   2          set_stratline(0);
 180   2          display_32_right(0,32*(i-2),lcd);
 181   2        }
 182   1      
 183   1      }
 184          
 185          
 186          int key_1(unsigned char number,unsigned char number_col)
 187          {
 188   1          unsigned char lcd[32] = {0};
 189   1          if(number_rand_state[0] == 1)
 190   1          {
 191   2            return 0;
 192   2          }
 193   1          dis_on_off(1);
 194   1          set_stratline(0);
 195   1          
 196   1          //ÒÀ´ÎÏÔÊ¾£¬ÉèÖÃÏÔÊ¾µÄÊý×Ö¼°Î»ÖÃ
 197   1          if(number<=4)
 198   1          {
 199   2            LCD_Map(number_rand[0],lcd);
 200   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 201   2          }
 202   1          else if(number>4&&number<=8)
 203   1          {
 204   2            LCD_Map(number_rand[0],lcd);
 205   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 206   2          }
 207   1          
 208   1          
 209   1          
 210   1          //´Ë´¦´úÂëÊÇÎªÁË½«ÖîÈçA,B,C,DµÄÊýÔÚ×Ö·ûÊý×éÖÐ´æÎª10£¬11£¬12£¬13
 211   1          if(number_rand[0]<10)
 212   1          {
 213   2            cal_str[cal_number] = toascll(number_rand[0]);
 214   2            cal_number+=1;
 215   2          }
 216   1          else if(number_rand[0] == 10)
 217   1          {
 218   2            cal_str[cal_number] = toascll(1);
 219   2            cal_number+=1;
 220   2            cal_str[cal_number] = toascll(0);
 221   2            cal_number+=1;
 222   2          }
 223   1          else if(number_rand[0] == 11)
 224   1          {
 225   2            cal_str[cal_number] = toascll(1);
 226   2            cal_number+=1;
 227   2            cal_str[cal_number] = toascll(1);
 228   2            cal_number+=1;
 229   2          }
 230   1          else if(number_rand[0] == 12)
 231   1          {
 232   2            cal_str[cal_number] = toascll(1);
 233   2            cal_number+=1;
 234   2            cal_str[cal_number] = toascll(2);
 235   2            cal_number+=1;
 236   2          }
 237   1          else if(number_rand[0] == 13)
 238   1          {
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 5   

 239   2            cal_str[cal_number] = toascll(1);
 240   2            cal_number+=1;
 241   2            cal_str[cal_number] = toascll(3);
 242   2            cal_number+=1;
 243   2          }
 244   1          LCD_Map(0,lcd);
 245   1          dis_on_off(1);
 246   1          set_stratline(0);
 247   1          display_32_left(0,0,lcd);
 248   1          dip_number+=1;
 249   1          number_rand_state[0] = 1;
 250   1      }
 251          
 252          int key_2(unsigned char number,unsigned char number_col)
 253          {
 254   1          unsigned char lcd[32] = {0};
 255   1          if(number_rand_state[1] == 1)
 256   1          {
 257   2            return 0;
 258   2          }
 259   1          dis_on_off(1);
 260   1          set_stratline(0);
 261   1          if(number<=4)
 262   1          {
 263   2            LCD_Map(number_rand[1],lcd);
 264   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 265   2          }
 266   1          else if(number>4&&number<=8)
 267   1          {
 268   2            LCD_Map(number_rand[1],lcd);
 269   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 270   2          }
 271   1          if(number_rand[1]<10)
 272   1          {
 273   2            cal_str[cal_number] = toascll(number_rand[1]);
 274   2            cal_number+=1;
 275   2          }
 276   1          else if(number_rand[1] == 10)
 277   1          {
 278   2            cal_str[cal_number] = toascll(1);
 279   2            cal_number+=1;
 280   2            cal_str[cal_number] = toascll(0);
 281   2            cal_number+=1;
 282   2          }
 283   1          else if(number_rand[1] == 11)
 284   1          {
 285   2            cal_str[cal_number] = toascll(1);
 286   2            cal_number+=1;
 287   2            cal_str[cal_number] = toascll(1);
 288   2            cal_number+=1;
 289   2          }
 290   1          else if(number_rand[1] == 12)
 291   1          {
 292   2            cal_str[cal_number] = toascll(1);
 293   2            cal_number+=1;
 294   2            cal_str[cal_number] = toascll(2);
 295   2            cal_number+=1;
 296   2          }
 297   1          else if(number_rand[1] == 13)
 298   1          {
 299   2            cal_str[cal_number] = toascll(1);
 300   2            cal_number+=1;
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 6   

 301   2            cal_str[cal_number] = toascll(3);
 302   2            cal_number+=1;
 303   2          }
 304   1          LCD_Map(0,lcd);
 305   1          dis_on_off(1);
 306   1          set_stratline(0);
 307   1          display_32_left(0,32,lcd);
 308   1          dip_number+=1;
 309   1          number_rand_state[1] = 1;
 310   1      }
 311          
 312          int key_3(unsigned char number,unsigned char number_col)
 313          {
 314   1          unsigned char lcd[32] = {0};
 315   1          
 316   1          if(number_rand_state[2] == 1)
 317   1          {
 318   2            return 0;
 319   2          }
 320   1          dis_on_off(1);
 321   1          set_stratline(0);
 322   1          if(number<=4)
 323   1          {
 324   2            LCD_Map(number_rand[2],lcd);
 325   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 326   2          }
 327   1          else if(number>4&&number<=8)
 328   1          {
 329   2            LCD_Map(number_rand[2],lcd);
 330   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 331   2          }
 332   1          if(number_rand[2]<10)
 333   1          {
 334   2            cal_str[cal_number] = toascll(number_rand[2]);
 335   2            cal_number+=1;
 336   2          }
 337   1          else if(number_rand[2] == 10)
 338   1          {
 339   2            cal_str[cal_number] = toascll(1);
 340   2            cal_number+=1;
 341   2            cal_str[cal_number] = toascll(0);
 342   2            cal_number+=1;
 343   2          }
 344   1          else if(number_rand[2] == 11)
 345   1          {
 346   2            cal_str[cal_number] = toascll(1);
 347   2            cal_number+=1;
 348   2            cal_str[cal_number] = toascll(1);
 349   2            cal_number+=1;
 350   2          }
 351   1          else if(number_rand[2] == 12)
 352   1          {
 353   2            cal_str[cal_number] = toascll(1);
 354   2            cal_number+=1;
 355   2            cal_str[cal_number] = toascll(2);
 356   2            cal_number+=1;
 357   2          }
 358   1          else if(number_rand[2] == 13)
 359   1          {
 360   2            cal_str[cal_number] = toascll(1);
 361   2            cal_number+=1;
 362   2            cal_str[cal_number] = toascll(3);
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 7   

 363   2            cal_number+=1;
 364   2          }
 365   1          LCD_Map(0,lcd);
 366   1          dis_on_off(1);
 367   1          set_stratline(0);
 368   1          display_32_right(0,0,lcd);
 369   1          dip_number+=1;
 370   1          number_rand_state[2] = 1;
 371   1      }
 372          
 373          int key_4(unsigned char number,unsigned char number_col)
 374          {
 375   1          unsigned char lcd[32] = {0};
 376   1          
 377   1          if(number_rand_state[3] == 1)
 378   1          {
 379   2            return ;
 380   2          }
 381   1          
 382   1          dis_on_off(1);
 383   1          set_stratline(0);
 384   1          if(number<=4)
 385   1          {
 386   2            LCD_Map(number_rand[3],lcd);
 387   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 388   2          }
 389   1          else if(number>4&&number<=8)
 390   1          {
 391   2            LCD_Map(number_rand[3],lcd);
 392   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 393   2          }
 394   1          if(number_rand[3]<10)
 395   1          {
 396   2            cal_str[cal_number] = toascll(number_rand[3]);
 397   2            cal_number+=1;
 398   2          }
 399   1          else if(number_rand[3] == 10)
 400   1          {
 401   2            cal_str[cal_number] = toascll(1);
 402   2            cal_number+=1;
 403   2            cal_str[cal_number] = toascll(0);
 404   2            cal_number+=1;
 405   2          }
 406   1          else if(number_rand[3] == 11)
 407   1          {
 408   2            cal_str[cal_number] = toascll(1);
 409   2            cal_number+=1;
 410   2            cal_str[cal_number] = toascll(1);
 411   2            cal_number+=1;
 412   2          }
 413   1          else if(number_rand[3] == 12)
 414   1          {
 415   2            cal_str[cal_number] = toascll(1);
 416   2            cal_number+=1;
 417   2            cal_str[cal_number] = toascll(2);
 418   2            cal_number+=1;
 419   2          }
 420   1          else if(number_rand[3] == 13)
 421   1          {
 422   2            cal_str[cal_number] = toascll(1);
 423   2            cal_number+=1;
 424   2            cal_str[cal_number] = toascll(3);
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 8   

 425   2            cal_number+=1;
 426   2          }
 427   1          LCD_Map(0,lcd);
 428   1          dis_on_off(1);
 429   1          set_stratline(0);
 430   1          display_32_right(0,32,lcd);
 431   1          dip_number+=1;
 432   1          number_rand_state[3] = 1;
 433   1      }
 434          
 435          void key_12(unsigned char number,unsigned char number_col)
 436          {
 437   1          unsigned char lcd[32] = {0};
 438   1          dis_on_off(1);
 439   1          set_stratline(0);
 440   1          if(number<=4)
 441   1          {
 442   2            LCD_Map(14,lcd);
 443   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 444   2          }
 445   1          else if(number>4&&number<=8)
 446   1          {
 447   2            LCD_Map(14,lcd);
 448   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 449   2          }
 450   1          cal_str[cal_number] = '+';
 451   1          dip_number+=1;
 452   1          cal_number+=1;
 453   1      }
 454          
 455          void key_13(unsigned char number,unsigned char number_col)
 456          {
 457   1          unsigned char lcd[32] = {0};
 458   1          dis_on_off(1);
 459   1          set_stratline(0);
 460   1          if(number<=4)
 461   1          {
 462   2            LCD_Map(15,lcd);
 463   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 464   2          }
 465   1          else if(number>4&&number<=8)
 466   1          {
 467   2            LCD_Map(15,lcd);
 468   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 469   2          }
 470   1          cal_str[cal_number] = '-';
 471   1          dip_number+=1;
 472   1          cal_number+=1;
 473   1      }
 474          
 475          void key_14(unsigned char number,unsigned char number_col)
 476          {
 477   1          unsigned char lcd[32] = {0};
 478   1          dis_on_off(1);
 479   1          set_stratline(0);
 480   1          if(number<=4)
 481   1          {
 482   2            LCD_Map(16,lcd);
 483   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 484   2          }
 485   1          else if(number>4&&number<=8)
 486   1          {
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 9   

 487   2            LCD_Map(16,lcd);
 488   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 489   2          }
 490   1          cal_str[cal_number] = '*';
 491   1          dip_number+=1;
 492   1          cal_number+=1;
 493   1      }
 494          
 495          void key_15(unsigned char number,unsigned char number_col)
 496          {
 497   1          unsigned char lcd[32] = {0};
 498   1          dis_on_off(1);
 499   1          set_stratline(0);
 500   1          if(number<=4)
 501   1          {
 502   2            LCD_Map(17,lcd);
 503   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 504   2          }
 505   1          else if(number>4&&number<=8)
 506   1          {
 507   2            LCD_Map(17,lcd);
 508   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 509   2          }
 510   1          cal_str[cal_number] = '/';
 511   1          dip_number+=1;
 512   1          cal_number+=1;
 513   1      }
 514          
 515          void key_16(unsigned char number,unsigned char number_col)
 516          {
 517   1          unsigned char lcd[32] = {0};
 518   1          dis_on_off(1);
 519   1          set_stratline(0);
 520   1          if(number<=4)
 521   1          {
 522   2            LCD_Map(18,lcd);
 523   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 524   2          }
 525   1          else if(number>4&&number<=8)
 526   1          {
 527   2            LCD_Map(18,lcd);
 528   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
 529   2          }
 530   1          cal_str[cal_number] = '(';
 531   1          dip_number+=1;
 532   1          cal_number+=1;
 533   1      }
 534          
 535          void key_17(unsigned char number,unsigned char number_col)
 536          {
 537   1          unsigned char lcd[32] = {0};
 538   1          dis_on_off(1);
 539   1          set_stratline(0);
 540   1          if(number<=4)
 541   1          {
 542   2            LCD_Map(19,lcd);
 543   2            display_32_left(2+(number_col*2),16*(number-1),lcd);
 544   2          }
 545   1          else if(number>4&&number<=8)
 546   1          {
 547   2            LCD_Map(19,lcd);
 548   2            display_32_right(2+(number_col*2),16*(number-5),lcd);
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 10  

 549   2          }
 550   1          cal_str[cal_number] = ')';
 551   1          dip_number+=1;
 552   1          cal_number+=1;
 553   1      }
 554          
 555          
 556          //¼ÆËã½á¹û£¬²¢ÅÐ¶Ï½á¹ûÊÇ·ñÎª24
 557          void key_11()
 558          {
 559   1        int result;
 560   1        unsigned char i;
 561   1        result = cal_main();
 562   1        if(result == 24)
 563   1        {
 564   2          P4&=0xEF;
 565   2        }
 566   1        else
 567   1        {
 568   2          P4&=0xDF;
 569   2        }
 570   1      }
*** WARNING C280 IN LINE 560 OF USER\keyboard.c: 'i': unreferenced local variable
 571          
 572          void key_F2()
 573          {
 574   1        unsigned char lcd[32] = {0};
 575   1        unsigned char i=0;
 576   1        clear();
 577   1        for(i=0;i<2;i++)
 578   1        {
 579   2          number_rand_state[i] = 0;
 580   2          LCD_Map(number_rand[i],lcd);
 581   2          dis_on_off(1);
 582   2          set_stratline(0);
 583   2          display_32_left(0,32*i,lcd);
 584   2        }
 585   1        
 586   1          for(i=2;i<4;i++)
 587   1        {
 588   2          number_rand_state[i] = 0;
 589   2          LCD_Map(number_rand[i],lcd);
 590   2          dis_on_off(1);
 591   2          set_stratline(0);
 592   2          display_32_right(0,32*(i-2),lcd);
 593   2        }
 594   1      }
 595          
 596          
 597          
 598          //¼ÆËã×Ö·ûÊý×éµÄÖ÷³ÌÐò
 599          int cal_main()
 600          {
 601   1        int num1 = 0, num2 = 0, i = 0, tmp = 0;
 602   1        unsigned char debug;
 603   1        Stack *s_num = NULL, *s_opt = NULL;
 604   1        char *opt=(char *)malloc(cal_number*sizeof(char));
 605   1        memcpy(opt,cal_str,cal_number);
 606   1        if(StackInit(&s_num) !=SUCCESS || StackInit(&s_opt) != SUCCESS)
 607   1        {
 608   2          //printf("Stack Init Error\n");
 609   2          return 0;
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 11  

 610   2        }
 611   1        
 612   1        
 613   1        //scanf("%s", opt);
 614   1        while(opt[i] != '\0' || StackEmpty(s_opt) != TRUE)
 615   1        {
 616   2          if(opt[i] >= '0' && opt[i] <= '9')
 617   2          {
 618   3            tmp = tmp*10 + opt[i]-'0';
 619   3            i++;
 620   3            if(opt[i] < '0' || opt[i] > '9')
 621   3            {
 622   4              Push(&s_num, tmp);
 623   4              tmp = 0;
 624   4            }
 625   3          }
 626   2          else
 627   2          {
 628   3            if(opt[i] == ')' && GetTop(s_opt) == '(')
 629   3            {
 630   4              Pop(&s_opt);
 631   4              i++;
 632   4              continue;
 633   4            }
 634   3            
 635   3            if(StackEmpty(s_opt) == TRUE ||
 636   3               (GetTop(s_opt) == '(' && opt[i] != ')') ||
 637   3               (priority(opt[i]) > priority(GetTop(s_opt))) )
 638   3            {
 639   4              Push(&s_opt, opt[i]);
 640   4              i++;
 641   4              continue;
 642   4            }
 643   3            
 644   3            if((opt[i] == '\0' && StackEmpty(s_opt) != TRUE)||
 645   3               (opt[i] == ')' && GetTop(s_opt) != '(') ||
 646   3               ( priority(opt[i]) <= priority( GetTop(s_opt) ) ) )
 647   3            {
 648   4              switch(Pop(&s_opt))
 649   4              {
 650   5                case '+':
 651   5                  num1 = Pop(&s_num);
 652   5                  num2 = Pop(&s_num);
 653   5                  Push(&s_num, num1+num2);
 654   5                  break;
 655   5                case '-':
 656   5                  num1 = Pop(&s_num);
 657   5                  num2 = Pop(&s_num);
 658   5                  Push(&s_num, num2-num1);
 659   5                  break;
 660   5                case '*':
 661   5                  num1 = Pop(&s_num);
 662   5                  num2 = Pop(&s_num);
 663   5                  Push(&s_num, num1*num2);
 664   5                  break;
 665   5                case '/':
 666   5                  num1 = Pop(&s_num);
 667   5                  num2 = Pop(&s_num);
 668   5                  Push(&s_num, num2/num1);
 669   5                  break;
 670   5              }
 671   4            }
C51 COMPILER V9.59.0.0   KEYBOARD                                                          06/21/2021 11:02:20 PAGE 12  

 672   3          }
 673   2        }
 674   1        result = GetTop(s_num);
 675   1        return result;
 676   1      }
*** WARNING C280 IN LINE 602 OF USER\keyboard.c: 'debug': unreferenced local variable
 677          
 678          
 679          
 680          
*** WARNING C291 IN LINE 250 OF USER\keyboard.c: not every exit path returns a value
*** WARNING C291 IN LINE 310 OF USER\keyboard.c: not every exit path returns a value
*** WARNING C291 IN LINE 371 OF USER\keyboard.c: not every exit path returns a value
*** WARNING C290 IN LINE 433 OF USER\keyboard.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5315    ----
   CONSTANT SIZE    =    384    ----
   XDATA SIZE       =    122     431
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
